DROP TABLE IF EXISTS users, item_requests, items, bookings, comments;

CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_name VARCHAR(255) NOT NULL,
    user_email VARCHAR(255) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (user_id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (user_email)
);

CREATE TABLE IF NOT EXISTS item_requests (
    request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    request_description VARCHAR(512) NOT NULL,
    requester_id BIGINT NOT NULL,
    CONSTRAINT pk_request PRIMARY KEY (request_id),
    CONSTRAINT fk_request_to_user FOREIGN KEY (requester_id)
        REFERENCES users(user_id)
);

CREATE TABLE IF NOT EXISTS items (
    item_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    item_name VARCHAR(255) NOT NULL,
    item_description VARCHAR(512) NOT NULL,
    item_owner BIGINT NOT NULL,
    available BOOLEAN NOT NULL,
    item_request_id BIGINT,
    CONSTRAINT pk_item PRIMARY KEY (item_id),
    CONSTRAINT fk_owner_to_user FOREIGN KEY (item_owner)
        REFERENCES users(user_id),
    CONSTRAINT fk_request_to_item_request FOREIGN KEY (item_request_id)
        REFERENCES item_requests(request_id)
);

CREATE TABLE IF NOT EXISTS bookings (
    booking_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    item_id BIGINT NOT NULL,
    booker_id BIGINT NOT NULL,
    booking_status VARCHAR(16) NOT NULL,
    booking_start TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    booking_end TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT pk_booking PRIMARY KEY (booking_id),
    CONSTRAINT fk_booking_item_id_to_item FOREIGN KEY (item_id)
        REFERENCES items(item_id),
    CONSTRAINT fk_booker_id_to_user FOREIGN KEY (booker_id)
        REFERENCES users(user_id)
);

CREATE TABLE IF NOT EXISTS comments (
    comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    comment_text VARCHAR(512) NOT NULL,
    item_id BIGINT NOT NULL,
    author_id BIGINT NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT pk_comment PRIMARY KEY (comment_id),
    CONSTRAINT fk_item_id_to_item FOREIGN KEY (item_id)
        REFERENCES items(item_id),
    CONSTRAINT fk_author_id_to_author FOREIGN KEY (author_id)
        REFERENCES users(user_id)
)